name: Parallel Jobs Example

on:
  push:
    branches:
      - "main"
jobs:
  parallel-jobs:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        number: [57]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.8' 
    - run: |
        sudo apt install ffmpeg -y
    - name: Create and Save ID File
      run: |
        #wget https://raw.githubusercontent.com/mooghen2s/data/top_tier_edge/top_tier_edge/output_${{ matrix.number }}.txt
        #wget https://raw.githubusercontent.com/mooghen2s/data/top_mp3/top_tier_edge/output_${{ matrix.number }}.mp3
        #python main.py ${{ matrix.number }}
        ls
        date +%s > output_${{ matrix.number }}.dat
    - name: Upload File to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: output_${{ matrix.number }}.dat
        path: output_${{ matrix.number }}.dat
  up_file:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: parallel-jobs
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: out
      - name: test
        id: ot_ran
        run:  echo "ta_for_release=$(date +%s)" >> $GITHUB_OUTPUT
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r build.zip out/
      - name: Release
        uses: softprops/action-gh-release@v2
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build.zip
          token: ${{ secrets.TOKEN }}
          tag_name: v1.${{ steps.ot_ran.outputs.ta_for_release }}
          name: Release rhubarb dat v1.${{ steps.ot_ran.outputs.ta_for_release }}
          draft: false
          prerelease: false
      
