name: Parallel Jobs Example

on:
  push:
    branches:
      - "test_edge"
jobs:
  parallel-jobs:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        number: [4, 5] #, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]
    steps:
    
    - uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.8' 
    - run: |
        pip install -q edge-tts
    - name: Create and Save ID File
      run: |
        wget https://raw.githubusercontent.com/mooghen2s/data/top_tier_edge/top_tier_edge/output_${{ matrix.number }}.txt
        wget https://raw.githubusercontent.com/mooghen2s/data_top/test_edge/main.py
        #python main.py ${{ matrix.number }}
        date +%s > output_${{ matrix.number }}.mp3
        #git clone --no-checkout --single-branch --branch top_mp3 https://mooghen2s:${{ secrets.TOKEN }}@github.com/mooghen2s/data.git
    - name: Upload File to GitHub
      uses: actions/upload-artifact@v3
      with:
        name: output_${{ matrix.number }}.mp3
        path: output_${{ matrix.number }}.mp3
  up_file:
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: parallel-jobs
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          path: out
      - name: test
        id: ot_ran
        run:  echo "ta_for_release=$(date +%s)" >> $GITHUB_OUTPUT
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r build.zip out/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v1.${{ steps.ot_ran.outputs.ta_for_release }}
          release_name: Release v1.${{ steps.ot_ran.outputs.ta_for_release }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
